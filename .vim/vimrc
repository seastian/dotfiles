" Plug Extensions
call plug#begin(expand('<sfile>:p:h').'/plugged')
Plug 'https://github.com/morhetz/gruvbox'
Plug 'preservim/nerdtree'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
"Plug 'joshdick/onedark.vim'
"Plug 'itchyny/lightline.vim'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-fugitive'
Plug 'christoomey/vim-tmux-navigator'
Plug 'elmcast/elm-vim'
Plug 'purescript-contrib/purescript-vim'
Plug 'sbdchd/neoformat'
if has("gui_win32")
    Plug 'kkoenig/wimproved.vim'
endif
call plug#end()

let g:elm_format_autosave = 1
let g:neoformat_enabled_purescript = ['purstidy']

augroup fmt
  autocmd!
  autocmd BufWritePre * undojoin | Neoformat
augroup END

" Fix redrawtime exceeded
set regexpengine=0 

if has("gui_win32")
    autocmd GUIEnter * silent! WToggleClean
    nmap <silent> <f11> :WToggleFullscreen<enter>
    language en
endif

" Disable Visual Bell
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=

filetype plugin indent on
syntax on
set backspace=start,eol,indent
set hidden
set noswapfile
colorscheme gruvbox
set background=dark
let mapleader = " "
set cursorline
set nu
set signcolumn=number
set encoding=utf-8
set nobackup
set nowritebackup
set cmdheight=2
set updatetime=300
set shortmess+=c
set signcolumn=number
set tabstop=4 softtabstop=4 shiftwidth=4 expandtab
set smartindent
set guioptions=!cd
" set colorcolumn=80
set incsearch
set guifont=Fantasque_Sans_Mono:h15
set laststatus=2

let mapleader = " "

nnoremap <leader>f :NERDTreeToggle<enter>
nnoremap <leader>F :NERDTreeFind<enter>
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

nmap <silent> <F1> :GFiles<enter> 
nmap <silent> <c-p> :GFiles<enter> 

" Configure lightline with Coc
let g:lightline = {
\ 'colorscheme': 'gruvbox',
\ 'active': {
\   'left': [ [ 'mode', 'paste' ],
\             [ 'gitbranch', 'cocstatus', 'readonly', 'filename', 'modified' ] ]
\ },
\ 'component_function': {
\   'cocstatus': 'coc#status',
\   'gitbranch': 'FugitiveHead'
\ },
\ }

" Use autocmd to force lightline update.
autocmd User CocStatusChange,CocDiagnosticChange call lightline#update()

source <sfile>:p:h/coc/coc-settings.vim
